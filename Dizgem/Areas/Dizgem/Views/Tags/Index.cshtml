
@{
    ViewData["Title"] = "Etiketler";
}
@section styles {
    <link href="~/lib/DataTables/datatables.min.css" rel="stylesheet" type="text/css" media="all" />
}

<h3>Etiketler</h3>

<p>
    @Html.AntiForgeryToken()
    <a asp-action="Create" class="btn btn-primary">Yeni Etiket Oluştur</a>
</p>

<div class="table-responsive">
    <table id="tagsTable" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>Etiket Adı</th>
                <th>URL Metni (Slug)</th>
                <th data-orderable="false">İşlemler</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="~/lib/DataTables/pdfmake-0.1.36/pdfmake.min.js"></script>
    <script src="~/lib/DataTables/pdfmake-0.1.36/vfs_fonts.js"></script>
    <script src="~/lib/DataTables/datatables.min.js"></script>

    <script>
        $(document).ready(function () {
            var table = $('#tagsTable').DataTable({
                dom: '<"clearfix d-flex justify-content-around mb-3"<"w-100"f>B><"clearfix overflow-auto"t><"px-3 border-0 d-flex flex-column flex-lg-row align-items-center justify-content-between"<li>p>',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        autoFilter: true
                    }
                ],
                "processing": true,
                "serverSide": true,
                "filter": true,
                "orderMulti": false,
                "ajax": {
                    "url": "/Dizgem/Tags/LoadTagsData",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "name", "name": "name", "autoWidth": true },
                    { "data": "slug", "name": "slug", "autoWidth": true },
                    {
                        "data": "id",
                        "render": function (data, type, row, meta) {
                            var editUrl = '/Dizgem/Tags/Edit/' + data;
                            // Silme işlemi için özel data attribute'leri ekliyoruz
                            return `<a href="${editUrl}" class="btn btn-sm btn-info">Düzenle</a> ` +
                                   `<a href="javascript:void(0);" class="btn btn-sm btn-danger delete-btn" data-id="${data}" data-name="${row.name}">Sil</a>`;
                        },
                        "orderable": false,
                        "width": "150px"
                    }
                ],
                "language": {
                    "url": "/lib/DataTables/i18n/tr-TR.json"
                }
            });

            // Silme butonu için olay dinleyicisi
            // DataTables dinamik olarak satır eklediği için, olay dinleyicisini tabloya bağlıyoruz
            $(document).on('click', '#tagsTable a.delete-btn', function () {
                var tagId = $(this).data('id');
                var tagName = $(this).data('name');
                // Anti-Forgery Token'ı formdan alıyoruz (herhangi bir form olabilir, genellikle layout'ta bulunur)
                var token = $('input[name="__RequestVerificationToken"]').val();

                Swal.fire({
                    title: `Emin misiniz?`,
                    text: `'${tagName}' etiketini silmek üzeresiniz. Bu işlem geri alınamaz!`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, sil!',
                    cancelButtonText: 'İptal'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Kullanıcı onayladıysa, AJAX isteğini gönder
                        $.ajax({
                            url: '/Dizgem/Tags/Delete/' + tagId,
                            type: 'POST',
                            headers: {
                                // Anti-Forgery Token'ı başlığa ekliyoruz
                                'RequestVerificationToken': token
                            },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire(
                                        'Silindi!',
                                        response.message,
                                        'success'
                                    );
                                    // Tabloyu yeniden yükle
                                    table.ajax.reload();
                                } else {
                                    Swal.fire(
                                        'Hata!',
                                        response.message,
                                        'error'
                                    );
                                }
                            },
                            error: function () {
                                Swal.fire(
                                    'Hata!',
                                    'İşlem sırasında bir sunucu hatası oluştu.',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });
        });
    </script>
}

